@model CoPilot.Models.Order
@{
    ViewBag.Title = "Orders";
    ViewBag.Message = "Wren Thicket Market";
    var hasWeight = false;
}
<div class="container">
    <div class="panel-group first-panel">
        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="orderEdit">
                <h4 class="panel-title">Edit Order</h4>
            </div>
            <div class="panel-body background75">
                @*<form asp-controller="Order" asp-action="Edit" asp-route-returnurl="@ViewBag.ReturnUrl" method="post" class="form-horizontal" role="form">*@
                @Html.ActionLink(linkText: "Back to List", actionName: "Index", controllerName: "Order", routeValues: new { }, htmlAttributes: new { @class = "btn-xs btn-cp" })<br />
                <div id="update-message">
                    @ViewBag.StatusMessage
                </div>
                <p>
                    Pre-orders can only be changed prior to the pre-order period close time of 10 am on Thursday. Change a quantity and click Update Qty. Or click on REMOVE FROM BASKET to cancel that product order.
                </p>
                <p>
                    <b>Account Info:</b><br/>
                    @ViewBag.FullName<br/>
                    @ViewBag.EmailAddress<br/>
                    @ViewBag.Phone<br/>
                </p>
                <br/>
                <p>
                    <b>Market Basket:</b>
                </p>
                @Html.HiddenFor(model => model.OrderId, new {id = "OrderId"})
                <table id="cart-summary" class="table table-bordered table-responsive table-hover table-striped">
                    <tr>
                        <th>Partner</th>
                        <th>Product Name</th>
                        <th>Quantity</th>
                        <th>Price (each)</th>
                        <th>Total</th>
                        <th></th>
                    </tr>
                    @foreach (var item in Model.OrderDetails)
                    {
                        <tr id="row-@item.OrderDetailId" data-id="@item.OrderDetailId" data-has-weight="@item.Product.SoldByWeight">
                            <td>@Html.ActionLink(linkText: item.Product.Partner.Name, actionName: "Partner", controllerName: "Home", routeValues: new { partnerid = item.Product.PartnerId }, htmlAttributes: new { @class = "btn-xs btn-cp" })</td>
                            <td>@Html.ActionLink(linkText: item.Product.Title, actionName: "Details", controllerName: "Store", routeValues: new { productid = item.ProductId }, htmlAttributes: new { @class = "btn-xs btn-cp" })</td>
                            @*<td id="item-count-@item.OrderDetailId">@item.Quantity</td>*@
                            <td>
                                <select class="select-qty" data-name="ItemOrderQty" id="@("ItemOrderQty" + item.OrderDetailId)" data-id="@item.OrderDetailId" data-function="OrderQtyChange">
                                    @for (int i = 1; i < 11; i++)
                                    {
                                        if (i == @item.Quantity)
                                        {
                                            <option data-value="@i" selected>@i</option>
                                        }
                                        else
                                        {
                                            <option data-value="@i">@i</option>
                                        }
                                    }
                                </select>
                            </td>
                            <td>
                                <span id="@("spanPrice" + item.OrderDetailId)">@item.Product.Price</span>
                                @if (item.Product.SoldByWeight)
                                {
                                    hasWeight = true;
                                }
                            </td>
                            <td>
                                <span id="@("spanTotal" + item.OrderDetailId)">
                                    @if (item.Product.SoldByWeight)
                                    {
                                        @Html.Raw(" TBD")
                                    }
                                    else
                                    {
                                        @((item.Product.Price * item.Quantity).ToString("c"))
                                    }
                                </span>
                            </td>
                            <td><a href="#" class="btn-xs btn-cp" id="@("RemoveProductFromOrder" + @item.OrderDetailId)" data-filter="@item.OrderId" data-id="@item.OrderDetailId" data-function="RemoveProductFromOrder" data-url='@Url.Content("~/Order/RemoveFromOrder")'>Remove from Basket</a></td>
                        </tr>
                    }
                    <tr>
                        <td class="text-center"><b>Total</b></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td id="cart-total">
                            <b>
                                @if (hasWeight)
                                {
                                    @Html.Raw(" TBD")
                                }
                                else
                                {
                                    @Model.Total.ToString("c")
                                }
                            </b>
                        </td>
                        <td></td>
                    </tr>
                </table>
                @Html.HiddenFor(model => hasWeight, new {id = "hasWeight"})
                <p>TBD: Order total may vary, some meat prices are listed per pound and actual meat price will vary depending on weight of package. See details of the individual product to estimate package size.</p>
                <p>
                    @if (ViewBag.AppViewModel.MarketEnabled == "True" && @Model.OrderDate >= DateTime.UtcNow.AddDays(-4))
                    {
                        <a href="#" class="btn-xs btn-cp" id="UpdateOrder" data-function="UpdateOrder" data-url='@Url.Content("~/Order/Edit")'>Save Order Changes</a>
                    }
                    @Html.ActionLink(linkText: "Go Back to Shopping", actionName: "Index", controllerName: "Home", routeValues: new {}, htmlAttributes: new {@class = "btn-xs btn-cp"})
                </p>
                @*</form>*@
            </div>
        </div>
    </div>
</div>

@section Scripts {
}
