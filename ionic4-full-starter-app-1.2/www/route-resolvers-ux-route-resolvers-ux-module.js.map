{"version":3,"sources":["webpack:///./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.html","webpack:///./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.scss","webpack:///./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.ts","webpack:///./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking.resolver.ts","webpack:///./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.html","webpack:///./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.scss","webpack:///./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.ts","webpack:///./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking.resolver.ts","webpack:///./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.html","webpack:///./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.scss","webpack:///./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.ts","webpack:///./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell.resolver.ts","webpack:///./src/app/showcase/route-resolvers-ux/route-resolvers-ux.module.ts","webpack:///./src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.html","webpack:///./src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.scss","webpack:///./src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.ts","webpack:///./src/app/utils/shell-provider.ts"],"names":[],"mappings":"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","file":"route-resolvers-ux-route-resolvers-ux-module.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"showcase/route-resolvers-ux\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Blocking Resovler Showcase\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"showcase-content\\\">\\r\\n  <section class=\\\"showcase-section\\\">\\r\\n    <p>\\r\\n      Notice how the UX degrades when using <b>Blocking</b> Route Resolvers in Angular\\r\\n    </p>\\r\\n    <ion-row style=\\\"background-color: #FFF; padding: 10px;\\\">\\r\\n      <ion-col size=\\\"12\\\">\\r\\n        <div [ngStyle]=\\\"{'background-image': 'url(' + routeResolveData?.cover + ')'}\\\" style=\\\"background-size: cover; background-repeat: no-repeat;\\\">\\r\\n          <app-aspect-ratio [ratio]=\\\"{w:2, h:1}\\\">\\r\\n            <h4 style=\\\"margin: 10px; text-align: center; color: #FFF;\\\">Heading on top of a cover image</h4>\\r\\n          </app-aspect-ratio>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"4\\\">\\r\\n        <app-aspect-ratio [ratio]=\\\"{w:1, h:1}\\\">\\r\\n          <img [src]=\\\"routeResolveData?.image\\\" alt=\\\"Sample Image\\\" style=\\\"width: 100%; height: 100%;\\\"/>\\r\\n        </app-aspect-ratio>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"8\\\">\\r\\n        <h3 style=\\\"margin-top: 0px;\\\">\\r\\n          {{ routeResolveData?.title }}\\r\\n        </h3>\\r\\n        <p>\\r\\n          {{ routeResolveData?.description }}\\r\\n        </p>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </section>\\r\\n</ion-content>\\r\\n\"","module.exports = \".showcase-content {\\n  --background: var(--app-background-shade); }\\n  .showcase-content .showcase-section {\\n    margin: 20px 20px 100px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hvd2Nhc2Uvcm91dGUtcmVzb2x2ZXJzLXV4L2Jsb2NraW5nLXJlc29sdmVycy9DOlxcUHJvamVjdHNcXEFwcGxpY2F0aW9uc1xcaW9uaWM0LWZ1bGwtc3RhcnRlci1hcHAtMS4yL3NyY1xcYXBwXFxzaG93Y2FzZVxccm91dGUtcmVzb2x2ZXJzLXV4XFxibG9ja2luZy1yZXNvbHZlcnNcXGJsb2NraW5nLXJlc29sdmVycy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5Q0FBYSxFQUFBO0VBRGY7SUFJSSx1QkFBdUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Nob3djYXNlL3JvdXRlLXJlc29sdmVycy11eC9ibG9ja2luZy1yZXNvbHZlcnMvYmxvY2tpbmctcmVzb2x2ZXJzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaG93Y2FzZS1jb250ZW50IHtcclxuICAtLWJhY2tncm91bmQ6IHZhcigtLWFwcC1iYWNrZ3JvdW5kLXNoYWRlKTtcclxuXHJcbiAgLnNob3djYXNlLXNlY3Rpb24ge1xyXG4gICAgbWFyZ2luOiAyMHB4IDIwcHggMTAwcHg7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// You can also use a Class object as a shell model\r\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\r\n\r\n@Component({\r\n  selector: 'app-showcase-blocking-resolvers',\r\n  templateUrl: './blocking-resolvers.page.html',\r\n  styleUrls: ['./blocking-resolvers.page.scss']\r\n})\r\nexport class BlockingResovlersPage implements OnInit {\r\n  // We will assign data coming from the Route Resolver to this property\r\n  routeResolveData: ShowcaseShellModel;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('Showcase Blocking Resovlers - ngOnInit()');\r\n\r\n    if (this.route && this.route.data) {\r\n      const dataObservable = this.route.data;\r\n      console.log('Showcase Blocking Resovlers - Route Resolve Observable => dataObservable: ', dataObservable);\r\n\r\n      if (dataObservable) {\r\n        dataObservable.subscribe(observableValue => {\r\n          const pageData: ShowcaseShellModel = observableValue['data'];\r\n          // tslint:disable-next-line:max-line-length\r\n          console.log('Showcase Blocking Resovlers - Subscribe to dataObservable (will emmit just one value) => PageData (' + ((pageData && pageData.isShell) ? 'SHELL' : 'REAL') + '): ', pageData);\r\n          if (pageData) {\r\n            this.routeResolveData = pageData;\r\n          }\r\n        });\r\n      } else {\r\n        console.warn('No dataObservable coming from Route Resolver data');\r\n      }\r\n    } else {\r\n      console.warn('No data coming from Route Resolver');\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { LoadingController } from '@ionic/angular';\r\n\r\nimport { defer } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ShowcaseService } from '../../showcase.service';\r\n\r\n@Injectable()\r\nexport class BlockingResolver implements Resolve<any> {\r\n  private loadingElement: any;\r\n\r\n  constructor(\r\n    private showcaseService: ShowcaseService,\r\n    private loadingController: LoadingController\r\n  ) { }\r\n\r\n  async presentLoader() {\r\n    this.loadingElement = await this.loadingController.create({\r\n      message: 'Loading ...'\r\n    });\r\n\r\n    await this.loadingElement.present();\r\n  }\r\n\r\n  async dismissLoader() {\r\n    if (this.loadingElement) {\r\n      await this.loadingElement.dismiss();\r\n    }\r\n  }\r\n\r\n  resolve() {\r\n    // WITHOUT LOADING INDICATOR\r\n\r\n    // Base Observable (where we get data from)\r\n    // const dataObservable = this.showcaseService.getData();\r\n\r\n    // Basic Resolver that returns the base Observable\r\n    // return dataObservable;\r\n\r\n\r\n    // WITH LOADING INDICATOR\r\n\r\n    // Base Observable (where we get data from)\r\n    const dataObservable = this.showcaseService.getData().pipe(\r\n      finalize(() => {\r\n        console.log('dataObservable COMPLETED - HIDE LOADER');\r\n        this.dismissLoader();\r\n      })\r\n    );\r\n\r\n    const deferedObservable = defer(() => {\r\n      // Will be logged at the moment of subscription\r\n      console.log('dataObservable STARTED - SHOW LOADER');\r\n      this.presentLoader();\r\n      return dataObservable;\r\n    });\r\n\r\n    // Basic Resolver that returns the base Observable\r\n    return deferedObservable;\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"showcase/route-resolvers-ux\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      NON Blocking Resovler Showcase\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"showcase-content\\\">\\r\\n  <section class=\\\"showcase-section\\\">\\r\\n    <p>\\r\\n      With Non-Blocking Resolvers, page transition is immediate. However UX degrades because you are showing a static loading indicator while the server sends data back to the client.\\r\\n    </p>\\r\\n    <ng-container *ngIf=\\\"!routeResolveData\\\">\\r\\n      <div style=\\\"margin: 20px 40px; text-align: center;\\\">\\r\\n        <ion-spinner></ion-spinner>\\r\\n        <p>\\r\\n          <b>You can show a static shell while fetching data from the backend</b>\\r\\n        </p>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"routeResolveData\\\">\\r\\n      <ion-row style=\\\"background-color: #FFF; padding: 10px;\\\">\\r\\n        <ion-col size=\\\"12\\\">\\r\\n          <div [ngStyle]=\\\"{'background-image': 'url(' + routeResolveData?.cover + ')'}\\\" style=\\\"background-size: cover; background-repeat: no-repeat;\\\">\\r\\n            <app-aspect-ratio [ratio]=\\\"{w:2, h:1}\\\">\\r\\n              <h4 style=\\\"margin: 10px; text-align: center; color: #FFF;\\\">Heading on top of a cover image</h4>\\r\\n            </app-aspect-ratio>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <app-aspect-ratio [ratio]=\\\"{w:1, h:1}\\\">\\r\\n            <img [src]=\\\"routeResolveData?.image\\\" alt=\\\"Sample Image\\\" style=\\\"width: 100%; height: 100%;\\\"/>\\r\\n          </app-aspect-ratio>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"8\\\">\\r\\n          <h3 style=\\\"margin-top: 0px;\\\">\\r\\n            {{ routeResolveData?.title }}\\r\\n          </h3>\\r\\n          <p>\\r\\n            {{ routeResolveData?.description }}\\r\\n          </p>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ng-container>\\r\\n  </section>\\r\\n</ion-content>\\r\\n\"","module.exports = \".showcase-content {\\n  --background: var(--app-background-shade); }\\n  .showcase-content .showcase-section {\\n    margin: 20px 20px 100px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hvd2Nhc2Uvcm91dGUtcmVzb2x2ZXJzLXV4L25vbi1ibG9ja2luZy1yZXNvbHZlcnMvQzpcXFByb2plY3RzXFxBcHBsaWNhdGlvbnNcXGlvbmljNC1mdWxsLXN0YXJ0ZXItYXBwLTEuMi9zcmNcXGFwcFxcc2hvd2Nhc2VcXHJvdXRlLXJlc29sdmVycy11eFxcbm9uLWJsb2NraW5nLXJlc29sdmVyc1xcbm9uLWJsb2NraW5nLXJlc29sdmVycy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5Q0FBYSxFQUFBO0VBRGY7SUFJSSx1QkFBdUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Nob3djYXNlL3JvdXRlLXJlc29sdmVycy11eC9ub24tYmxvY2tpbmctcmVzb2x2ZXJzL25vbi1ibG9ja2luZy1yZXNvbHZlcnMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNob3djYXNlLWNvbnRlbnQge1xyXG4gIC0tYmFja2dyb3VuZDogdmFyKC0tYXBwLWJhY2tncm91bmQtc2hhZGUpO1xyXG5cclxuICAuc2hvd2Nhc2Utc2VjdGlvbiB7XHJcbiAgICBtYXJnaW46IDIwcHggMjBweCAxMDBweDtcclxuICB9XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// You can also use a Class object as a shell model\r\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\r\n\r\n@Component({\r\n  selector: 'app-showcase-non-blocking-resolvers',\r\n  templateUrl: './non-blocking-resolvers.page.html',\r\n  styleUrls: ['./non-blocking-resolvers.page.scss']\r\n})\r\nexport class NonBlockingResolversPage implements OnInit {\r\n  // We will assign data coming from the Route Resolver to this property\r\n  routeResolveData: ShowcaseShellModel;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('Showcase NON Blocking Resovlers - ngOnInit()');\r\n\r\n    if (this.route && this.route.data) {\r\n      // We resolved a promise for the data Observable\r\n      const promiseObservable = this.route.data;\r\n      console.log('Showcase NON Blocking Resovlers - Route Resolve Observable => promiseObservable: ', promiseObservable);\r\n\r\n      if (promiseObservable) {\r\n        promiseObservable.subscribe(promiseValue => {\r\n          const dataObservable = promiseValue['data'];\r\n          console.log('Showcase NON Blocking Resovlers - Subscribe to promiseObservable => dataObservable: ', dataObservable);\r\n\r\n          if (dataObservable) {\r\n            dataObservable.subscribe(observableValue => {\r\n              const pageData: ShowcaseShellModel = observableValue;\r\n              // tslint:disable-next-line:max-line-length\r\n              console.log('Showcase NON Blocking Resovlers - Subscribe to dataObservable (will emmit just one value) => PageData (' + ((pageData && pageData.isShell) ? 'SHELL' : 'REAL') + '): ', pageData);\r\n              if (pageData) {\r\n                this.routeResolveData = pageData;\r\n              }\r\n            });\r\n          } else {\r\n            console.warn('No dataObservable coming from Route Resolver promiseObservable');\r\n          }\r\n        });\r\n      } else {\r\n        console.warn('No promiseObservable coming from Route Resolver data');\r\n      }\r\n    } else {\r\n      console.warn('No data coming from Route Resolver');\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\n\r\nimport { ShowcaseService } from '../../showcase.service';\r\n\r\n@Injectable()\r\nexport class NonBlockingResolver implements Resolve<any> {\r\n\r\n  constructor(\r\n    private showcaseService: ShowcaseService\r\n  ) {}\r\n\r\n  resolve() {\r\n    // Base Observable (where we get data from)\r\n    const dataObservable = this.showcaseService.getData();\r\n\r\n    // NON-BLOCKING RESOLVERS\r\n\r\n    // Resolver using a ReplySubject that emits the base Observable and then completes\r\n    // const subject = new ReplaySubject();\r\n    // subject.next(dataObservable);\r\n    // subject.complete();\r\n    // return subject;\r\n\r\n    // Resolver using an Observable that emits the base Observable and then completes\r\n    // const observable = Observable.create((observer) => {\r\n    //   observer.next(dataObservable);\r\n    //   observer.complete();\r\n    // });\r\n    // return observable;\r\n\r\n    // Resolver using a Promise that resolves the base Observable\r\n    const observablePromise = new Promise((resolve, reject) => {\r\n      resolve(dataObservable);\r\n    });\r\n    return observablePromise;\r\n  }\r\n}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"showcase/route-resolvers-ux\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Progressive Shell Showcase\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"showcase-content\\\">\\r\\n  <section class=\\\"showcase-section\\\">\\r\\n    <ion-row style=\\\"background-color: #FFF; padding: 10px;\\\">\\r\\n      <ion-col size=\\\"12\\\">\\r\\n        <app-image-shell class=\\\"add-overlay\\\" animation=\\\"spinner\\\" [mode]=\\\"'cover'\\\" [src]=\\\"routeResolveData?.cover\\\" [alt]=\\\"'Sample Image Cover'\\\">\\r\\n          <app-aspect-ratio [ratio]=\\\"{w:2, h:1}\\\">\\r\\n            <h4 style=\\\"margin: 10px; text-align: center; color: #FFF;\\\">Heading on top of a cover image</h4>\\r\\n          </app-aspect-ratio>\\r\\n        </app-image-shell>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"4\\\">\\r\\n        <app-aspect-ratio [ratio]=\\\"{w:1, h:1}\\\">\\r\\n          <app-image-shell animation=\\\"spinner\\\" [src]=\\\"routeResolveData?.image\\\" [alt]=\\\"'Sample Image'\\\"></app-image-shell>\\r\\n        </app-aspect-ratio>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"8\\\">\\r\\n        <h3 style=\\\"margin-top: 0px;\\\">\\r\\n          <app-text-shell [data]=\\\"routeResolveData?.title\\\"></app-text-shell>\\r\\n        </h3>\\r\\n        <p>\\r\\n          <app-text-shell animation=\\\"bouncing\\\" lines=\\\"3\\\" [data]=\\\"routeResolveData?.description\\\"></app-text-shell>\\r\\n        </p>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </section>\\r\\n</ion-content>\\r\\n\"","module.exports = \".showcase-content {\\n  --background: var(--app-background-shade); }\\n  .showcase-content .showcase-section {\\n    margin: 20px 20px 100px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hvd2Nhc2Uvcm91dGUtcmVzb2x2ZXJzLXV4L3Byb2dyZXNzaXZlLXNoZWxsLXJlc29sdmVycy9DOlxcUHJvamVjdHNcXEFwcGxpY2F0aW9uc1xcaW9uaWM0LWZ1bGwtc3RhcnRlci1hcHAtMS4yL3NyY1xcYXBwXFxzaG93Y2FzZVxccm91dGUtcmVzb2x2ZXJzLXV4XFxwcm9ncmVzc2l2ZS1zaGVsbC1yZXNvbHZlcnNcXHByb2dyZXNzaXZlLXNoZWxsLXJlc29sdmVycy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5Q0FBYSxFQUFBO0VBRGY7SUFJSSx1QkFBdUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Nob3djYXNlL3JvdXRlLXJlc29sdmVycy11eC9wcm9ncmVzc2l2ZS1zaGVsbC1yZXNvbHZlcnMvcHJvZ3Jlc3NpdmUtc2hlbGwtcmVzb2x2ZXJzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaG93Y2FzZS1jb250ZW50IHtcclxuICAtLWJhY2tncm91bmQ6IHZhcigtLWFwcC1iYWNrZ3JvdW5kLXNoYWRlKTtcclxuXHJcbiAgLnNob3djYXNlLXNlY3Rpb24ge1xyXG4gICAgbWFyZ2luOiAyMHB4IDIwcHggMTAwcHg7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n// You can also use a Class object as a shell model\r\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\r\n\r\n@Component({\r\n  selector: 'app-showcase-progressive-shell-resolvers',\r\n  templateUrl: './progressive-shell-resolvers.page.html',\r\n  styleUrls: ['./progressive-shell-resolvers.page.scss']\r\n})\r\nexport class ProgressiveShellResovlersPage implements OnInit {\r\n  // We will assign data coming from the Route Resolver to this property\r\n  routeResolveData: ShowcaseShellModel;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('Showcase Progressive Shell Resovlers - ngOnInit()');\r\n\r\n    if (this.route && this.route.data) {\r\n      // We resolved a promise for the data Observable\r\n      const promiseObservable = this.route.data;\r\n      console.log('Showcase Progressive Shell Resovlers - Route Resolve Observable => promiseObservable: ', promiseObservable);\r\n\r\n      if (promiseObservable) {\r\n        promiseObservable.subscribe(promiseValue => {\r\n          const dataObservable = promiseValue['data'];\r\n          console.log('Showcase Progressive Shell Resovlers - Subscribe to promiseObservable => dataObservable: ', dataObservable);\r\n\r\n          if (dataObservable) {\r\n            dataObservable.subscribe(observableValue => {\r\n              const pageData: ShowcaseShellModel = observableValue;\r\n              // tslint:disable-next-line:max-line-length\r\n              console.log('Showcase Progressive Shell Resovlers - Subscribe to dataObservable (can emmit multiple values) => PageData (' + ((pageData && pageData.isShell) ? 'SHELL' : 'REAL') + '): ', pageData);\r\n              // As we are implementing an App Shell architecture, pageData will be firstly an empty shell model,\r\n              // and the real remote data once it gets fetched\r\n              if (pageData) {\r\n                this.routeResolveData = pageData;\r\n              }\r\n            });\r\n          } else {\r\n            console.warn('No dataObservable coming from Route Resolver promiseObservable');\r\n          }\r\n        });\r\n      } else {\r\n        console.warn('No promiseObservable coming from Route Resolver data');\r\n      }\r\n    } else {\r\n      console.warn('No data coming from Route Resolver');\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\n\r\nimport { ShowcaseService } from '../../showcase.service';\r\n\r\n@Injectable()\r\nexport class ProgressiveShellResolver implements Resolve<any> {\r\n\r\n  constructor(\r\n    private showcaseService: ShowcaseService\r\n  ) {}\r\n\r\n  resolve() {\r\n    // Get the Shell Provider from the service\r\n    const shellProviderObservable = this.showcaseService.getDataWithShell();\r\n\r\n    // Resolve with Shell Provider\r\n    const observablePromise = new Promise((resolve, reject) => {\r\n      resolve(shellProviderObservable);\r\n    });\r\n    return observablePromise;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ComponentsModule } from '../../components/components.module';\r\n\r\nimport { RouteResovlersUXPage } from './route-resolvers-ux.page';\r\nimport { NonBlockingResolversPage } from './non-blocking-resolvers/non-blocking-resolvers.page';\r\nimport { BlockingResovlersPage } from './blocking-resolvers/blocking-resolvers.page';\r\nimport { ProgressiveShellResovlersPage } from './progressive-shell-resolvers/progressive-shell-resolvers.page';\r\n\r\nimport { BlockingResolver } from './blocking-resolvers/blocking.resolver';\r\nimport { NonBlockingResolver } from './non-blocking-resolvers/non-blocking.resolver';\r\nimport { ProgressiveShellResolver } from './progressive-shell-resolvers/progressive-shell.resolver';\r\n\r\nimport { ShowcaseService } from '../showcase.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RouteResovlersUXPage\r\n  },\r\n  {\r\n    path: 'blocking-resolvers',\r\n    component: BlockingResovlersPage,\r\n    resolve: {\r\n      data: BlockingResolver\r\n    }\r\n  },\r\n  {\r\n    path: 'non-blocking-resolvers',\r\n    component: NonBlockingResolversPage,\r\n    resolve: {\r\n      data: NonBlockingResolver\r\n    }\r\n  },\r\n  {\r\n    path: 'progressive-shell-resolvers',\r\n    component: ProgressiveShellResovlersPage,\r\n    resolve: {\r\n      data: ProgressiveShellResolver\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ComponentsModule,\r\n    HttpClientModule\r\n  ],\r\n  declarations: [\r\n    RouteResovlersUXPage,\r\n    BlockingResovlersPage,\r\n    NonBlockingResolversPage,\r\n    ProgressiveShellResovlersPage\r\n  ],\r\n  providers: [\r\n    BlockingResolver,\r\n    NonBlockingResolver,\r\n    ProgressiveShellResolver,\r\n    ShowcaseService\r\n  ]\r\n})\r\nexport class RouteResolversUXModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Improve Route Resolvers UX\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"showcase-content\\\">\\r\\n  <section class=\\\"showcase-section\\\">\\r\\n    <p>\\r\\n      Lets see the difference between the different implementations of Route Resolvers.\\r\\n    </p>\\r\\n    <h5>Blocking Route Resolvers</h5>\\r\\n    <p>\\r\\n      By default, Angular Route Resolvers won't transition to the page until the Resolver Observable completes.\\r\\n    </p>\\r\\n    <p>\\r\\n      Let's suppose the backend is slow and takes 5 seconds to fetch data and return it to the client, this is what's going to happen.\\r\\n    </p>\\r\\n    <p>\\r\\n      <b>Expected behavior:</b> Page transition will be delayed 5 seconds until the server sends data back to the client.\\r\\n    </p>\\r\\n    <ion-button expand=\\\"block\\\" [routerLink]=\\\"['/showcase/route-resolvers-ux/blocking-resolvers']\\\">Blocking Resolvers</ion-button>\\r\\n  </section>\\r\\n  <section class=\\\"showcase-section\\\">\\r\\n    <h5>NON-Blocking Route Resolvers</h5>\\r\\n    <p>\\r\\n      To avoid waiting for the Observable to complete, we can wrap the base Observable (the one we are getting data from) with a dummy Observable, Subject or Promise that emits the base Observable and immediately completes.\\r\\n    </p>\\r\\n    <p>\\r\\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show a blank state while the server sends data back to the client.\\r\\n    </p>\\r\\n    <ion-button expand=\\\"block\\\" [routerLink]=\\\"['/showcase/route-resolvers-ux/non-blocking-resolvers']\\\">Non-Blocking Resolvers</ion-button>\\r\\n  </section>\\r\\n  <section class=\\\"showcase-section\\\">\\r\\n    <h5>Progressive Shell Resolvers</h5>\\r\\n    <p>\\r\\n      By using the <code>ShellProvider</code> utility in conjunction with Angular Route Resolvers, we can solve this UX problem and make page transitions immediate.\\r\\n    </p>\\r\\n    <p>\\r\\n      This approach uses a non-blocking Resolver in conjunction with the <code>ShellProvider</code> utility.\\r\\n    </p>\\r\\n    <p>\\r\\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show some shell elements while the server sends data back to the client.\\r\\n    </p>\\r\\n    <ion-button expand=\\\"block\\\" [routerLink]=\\\"['/showcase/route-resolvers-ux/progressive-shell-resolvers']\\\">Progressive Shell Resolvers</ion-button>\\r\\n  </section>\\r\\n</ion-content>\\r\\n\"","module.exports = \".showcase-content {\\n  --background: var(--app-background-shade); }\\n  .showcase-content .showcase-section {\\n    margin: 20px 20px 100px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hvd2Nhc2Uvcm91dGUtcmVzb2x2ZXJzLXV4L0M6XFxQcm9qZWN0c1xcQXBwbGljYXRpb25zXFxpb25pYzQtZnVsbC1zdGFydGVyLWFwcC0xLjIvc3JjXFxhcHBcXHNob3djYXNlXFxyb3V0ZS1yZXNvbHZlcnMtdXhcXHJvdXRlLXJlc29sdmVycy11eC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5Q0FBYSxFQUFBO0VBRGY7SUFJSSx1QkFBdUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Nob3djYXNlL3JvdXRlLXJlc29sdmVycy11eC9yb3V0ZS1yZXNvbHZlcnMtdXgucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNob3djYXNlLWNvbnRlbnQge1xyXG4gIC0tYmFja2dyb3VuZDogdmFyKC0tYXBwLWJhY2tncm91bmQtc2hhZGUpO1xyXG5cclxuICAuc2hvd2Nhc2Utc2VjdGlvbiB7XHJcbiAgICBtYXJnaW46IDIwcHggMjBweCAxMDBweDtcclxuICB9XHJcbn1cclxuIl19 */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-showcase-route-resolvers-ux',\r\n  templateUrl: './route-resolvers-ux.page.html',\r\n  styleUrls: ['./route-resolvers-ux.page.scss']\r\n})\r\n\r\nexport class RouteResovlersUXPage {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { Observable, BehaviorSubject, forkJoin, of } from 'rxjs';\r\nimport { first, delay } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport class ShellProvider<T> {\r\n  private _observable: Observable<T>;\r\n\r\n  // A Subject that requires an initial value and emits its current value to new subscribers\r\n  // If we choose a BehaviorSubject, new subscribers will only get the latest value (real data).\r\n  // This is useful for repeated use of the resolved data (navigate to a page, go back, navigate to the same page again)\r\n  private _subject: BehaviorSubject<T>;\r\n\r\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\r\n  // However, in production you should set this delay to 0 in the environment.ts file.\r\n  private networkDelay = (environment && environment.shell && environment.shell.networkDelay) ? environment.shell.networkDelay : 0;\r\n  // To debug shell styles, change configuration in the environment.ts file\r\n  private debugMode = (environment && environment.shell && environment.shell.debug) ? environment.shell.debug : false;\r\n\r\n  constructor(shellModel: T, dataObservable: Observable<T>) {\r\n    // tslint:disable-next-line:max-line-length\r\n    const shellClassName = (shellModel && shellModel.constructor && shellModel.constructor.name) ? shellModel.constructor.name : 'No Class Name';\r\n\r\n    // tslint:disable-next-line:no-console\r\n    console.time('[' + shellClassName + '] ShellProvider roundtrip');\r\n    // Set the shell model as the initial value\r\n    this._subject = new BehaviorSubject<T>(shellModel);\r\n\r\n    const delayObservable = of(true).pipe(\r\n      delay(this.networkDelay)\r\n      // finalize(() => console.log('delayObservable COMPLETED'))\r\n    );\r\n\r\n    dataObservable.pipe(\r\n      first() // Prevent the need to unsubscribe because .first() completes the observable\r\n      // finalize(() => console.log('dataObservable COMPLETED'))\r\n    );\r\n\r\n    // Put both delay and data Observables in a forkJoin so they execute in parallel so that\r\n    // the delay caused (on purpose) by the delayObservable doesn't get added to the time the dataObservable takes to complete\r\n    const forkedObservables = forkJoin(\r\n      delayObservable,\r\n      dataObservable\r\n    )\r\n    .pipe(\r\n      // finalize(() => console.log('forkedObservables COMPLETED'))\r\n    )\r\n    .subscribe(([delayValue, dataValue]: [boolean, T]) => {\r\n      if (!this.debugMode) {\r\n        this._subject.next(dataValue);\r\n        // tslint:disable-next-line:no-console\r\n        console.timeEnd('[' + shellClassName + '] ShellProvider roundtrip');\r\n      }\r\n    });\r\n\r\n    this._observable = this._subject.asObservable();\r\n  }\r\n\r\n  public get observable(): Observable<T> {\r\n    return this._observable;\r\n  }\r\n}\r\n"],"sourceRoot":""}