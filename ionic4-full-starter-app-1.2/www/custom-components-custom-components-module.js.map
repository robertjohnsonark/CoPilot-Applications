{"version":3,"sources":["webpack:///./src/app/showcase/custom-components/custom-components.module.ts","webpack:///./src/app/showcase/custom-components/custom-components.page.html","webpack:///./src/app/showcase/custom-components/custom-components.page.scss","webpack:///./src/app/showcase/custom-components/custom-components.page.ts","webpack:///./src/app/utils/shell-provider.ts"],"names":[],"mappings":"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","file":"custom-components-custom-components-module.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { ComponentsModule } from '../../components/components.module';\r\nimport { CustomComponentsPage } from './custom-components.page';\r\nimport { ShowcaseService } from '../showcase.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    ComponentsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: CustomComponentsPage\r\n      }\r\n    ])\r\n  ],\r\n  declarations: [\r\n    CustomComponentsPage\r\n  ],\r\n  providers: [\r\n    ShowcaseService\r\n  ]\r\n})\r\nexport class CustomComponentsModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Custom Components\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"showcase-content\\\">\\r\\n  <ion-item-divider sticky=\\\"true\\\">\\r\\n    <ion-label>Checkbox Wrapper</ion-label>\\r\\n  </ion-item-divider>\\r\\n  <section class=\\\"showcase-section\\\">\\r\\n    <p>\\r\\n      This is a super straightforward component whose purpose is to wrap an <code>&lt;ion-checkbox&gt;</code> element to enable accessing the checkbox state from its parents.\\r\\n    </p>\\r\\n<pre>\\r\\n&lt;app-checkbox-wrapper class=\\\"custom-checkbox\\\"&gt;\\r\\n  &lt;ion-checkbox checked=true&gt;&lt;/ion-checkbox&gt;\\r\\n  &lt;ion-label&gt;Sample Checkbox&lt;/ion-label&gt;\\r\\n&lt;/app-checkbox-wrapper&gt;\\r\\n</pre>\\r\\n<pre>\\r\\napp-checkbox-wrapper.custom-checkbox &#123;\\r\\n  background: #CCC;\\r\\n  color: #000;\\r\\n\\r\\n  &.checkbox-checked &#123;\\r\\n    background: #00AFFF;\\r\\n    color: #FFF;\\r\\n  &#125;\\r\\n&#125;\\r\\n</pre>\\r\\n    <app-checkbox-wrapper class=\\\"custom-checkbox\\\">\\r\\n      <ion-checkbox checked=true></ion-checkbox>\\r\\n      <ion-label>Sample Checkbox</ion-label>\\r\\n    </app-checkbox-wrapper>\\r\\n  </section>\\r\\n\\r\\n  <ion-item-divider sticky=\\\"true\\\">\\r\\n    <ion-label>Show/Hide Password</ion-label>\\r\\n  </ion-item-divider>\\r\\n  <section class=\\\"showcase-section\\\">\\r\\n    <p>\\r\\n      By wrapping an <code>&lt;ion-input&gt;</code> element with this component, you can enhance the UX and add a show/hide password functionality.\\r\\n    </p>\\r\\n<pre>\\r\\n&lt;app-show-hide-password&gt;\\r\\n  &lt;ion-input type=\\\"password\\\" placeholder=\\\"Try setting a password\\\" value=\\\"It's a secret!\\\"&gt;&lt;/ion-input&gt;\\r\\n&lt;/app-show-hide-password&gt;\\r\\n</pre>\\r\\n    <app-show-hide-password>\\r\\n      <ion-input type=\\\"password\\\" placeholder=\\\"Try setting a password\\\" value=\\\"It's a secret!\\\"></ion-input>\\r\\n    </app-show-hide-password>\\r\\n  </section>\\r\\n\\r\\n  <ion-item-divider sticky=\\\"true\\\">\\r\\n    <ion-label>Countdown Timer</ion-label>\\r\\n  </ion-item-divider>\\r\\n  <section class=\\\"showcase-section\\\">\\r\\n    <p>\\r\\n      This components shows the remaining time (in days, hours, minutes or seconds) to a given date.\\r\\n    </p>\\r\\n    <p>\\r\\n      A few examples on how to use this component:\\r\\n    </p>\\r\\n    <h5>From days to seconds</h5>\\r\\n<pre>\\r\\n&lt;app-countdown-timer <b>[units]=\\\"&#123;from: 'day', to: 'second'&#125;\\\"</b> [end]=\\\"countdownDate\\\"&gt;&lt;/app-countdown-timer&gt;\\r\\n</pre>\\r\\n    <app-countdown-timer [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'day', to: 'second'}\\\"></app-countdown-timer>\\r\\n    <h5>From days to minutes</h5>\\r\\n<pre>\\r\\n&lt;app-countdown-timer <b>[units]=\\\"&#123;from: 'day', to: 'minute'&#125;\\\"</b> [end]=\\\"countdownDate\\\"&gt;&lt;/app-countdown-timer&gt;\\r\\n</pre>\\r\\n    <app-countdown-timer [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'day', to: 'minute'}\\\"></app-countdown-timer>\\r\\n    <h5>From hours to seconds</h5>\\r\\n<pre>\\r\\n&lt;app-countdown-timer <b>[units]=\\\"&#123;from: 'hour', to: 'second'&#125;\\\"</b> [end]=\\\"countdownDate\\\"&gt;&lt;/app-countdown-timer&gt;\\r\\n</pre>\\r\\n    <app-countdown-timer [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'hour', to: 'second'}\\\"></app-countdown-timer>\\r\\n    <h5>From hours to minutes</h5>\\r\\n<pre>\\r\\n&lt;app-countdown-timer <b>[units]=\\\"&#123;from: 'hour', to: 'minute'&#125;\\\"</b> [end]=\\\"countdownDate\\\"&gt;&lt;/app-countdown-timer&gt;\\r\\n</pre>\\r\\n    <app-countdown-timer [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'hour', to: 'minute'}\\\"></app-countdown-timer>\\r\\n    <h5>From minutes to seconds</h5>\\r\\n<pre>\\r\\n&lt;app-countdown-timer <b>[units]=\\\"&#123;from: 'minute', to: 'second'&#125;\\\"</b> [end]=\\\"countdownDate\\\"&gt;&lt;/app-countdown-timer&gt;\\r\\n</pre>\\r\\n    <app-countdown-timer [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'minute', to: 'second'}\\\"></app-countdown-timer>\\r\\n    <h5>Just days</h5>\\r\\n<pre>\\r\\n&lt;app-countdown-timer <b>[units]=\\\"&#123;from: 'day', to: 'day'&#125;\\\"</b> [end]=\\\"countdownDate\\\"&gt;&lt;/app-countdown-timer&gt;\\r\\n</pre>\\r\\n    <app-countdown-timer [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'day', to: 'day'}\\\"></app-countdown-timer>\\r\\n    <h5>Just hours</h5>\\r\\n<pre>\\r\\n&lt;app-countdown-timer <b>[units]=\\\"&#123;from: 'hour', to: 'hour'&#125;\\\"</b> [end]=\\\"countdownDate\\\"&gt;&lt;/app-countdown-timer&gt;\\r\\n</pre>\\r\\n    <app-countdown-timer [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'hour', to: 'hour'}\\\"></app-countdown-timer>\\r\\n    <h5>Just minutes</h5>\\r\\n<pre>\\r\\n&lt;app-countdown-timer <b>[units]=\\\"&#123;from: 'minute', to: 'minute'&#125;\\\"</b> [end]=\\\"countdownDate\\\"&gt;&lt;/app-countdown-timer&gt;\\r\\n</pre>\\r\\n    <app-countdown-timer [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'minute', to: 'minute'}\\\"></app-countdown-timer>\\r\\n    <h5>Just seconds</h5>\\r\\n<pre>\\r\\n&lt;app-countdown-timer <b>[units]=\\\"&#123;from: 'second', to: 'second'&#125;\\\"</b> [end]=\\\"countdownDate\\\"&gt;&lt;/app-countdown-timer&gt;\\r\\n</pre>\\r\\n    <app-countdown-timer [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'second', to: 'second'}\\\"></app-countdown-timer>\\r\\n  </section>\\r\\n  <section class=\\\"showcase-section\\\">\\r\\n    <h2>Styling</h2>\\r\\n    <p>\\r\\n      You can change different properties to adjust the look and feel of the component.\\r\\n    </p>\\r\\n    <h5>Fill</h5>\\r\\n<pre>\\r\\napp-countdown-timer &#123;\\r\\n  --countdown-fill-border: none;\\r\\n  --countdown-fill-border-radius: 10px;\\r\\n  --countdown-fill-background: #FFFFFF;\\r\\n  --countdown-fill-shadow: 0px 0px 5px 0px rgba(0,0,0, 0.2);\\r\\n&#125;\\r\\n</pre>\\r\\n    <app-countdown-timer style=\\\"\\r\\n      background-color: transparent;\\r\\n      --countdown-padding: 10px;\\r\\n      --countdown-fill-border: none;\\r\\n      --countdown-fill-border-radius: 10px;\\r\\n      --countdown-fill-background: #FFFFFF;\\r\\n      --countdown-fill-shadow: 0px 0px 5px 0px rgba(0,0,0, 0.2);\\r\\n    \\\" fill=\\\"countdown\\\" [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'hour', to: 'second'}\\\"></app-countdown-timer>\\r\\n    <h5>Color</h5>\\r\\n<pre>\\r\\napp-countdown-timer &#123;\\r\\n  --countdown-fill-background: #000000;\\r\\n  --countdown-value-color: #FFFFFF;\\r\\n  --countdown-unit-color: #F2F2F2;\\r\\n&#125;\\r\\n</pre>\\r\\n    <app-countdown-timer style=\\\"\\r\\n      --countdown-fill-background: #000000;\\r\\n      --countdown-padding: 10px;\\r\\n      --countdown-value-color: #FFFFFF;\\r\\n      --countdown-unit-color: #F2F2F2;\\r\\n    \\\" fill=\\\"countdown\\\" [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'hour', to: 'second'}\\\"></app-countdown-timer>\\r\\n    <h5>Margins & Paddings</h5>\\r\\n<pre>\\r\\napp-countdown-timer &#123;\\r\\n  --countdown-margin: 0px;\\r\\n  --countdown-padding: 0px;\\r\\n  --countdown-time-margin: 0px;\\r\\n  --countdown-time-padding: 0px;\\r\\n  --countdown-inner-time-margin: 2px;\\r\\n  --countdown-inner-time-padding: 0px;\\r\\n&#125;\\r\\n</pre>\\r\\n    <h5>Time unit positioning</h5>\\r\\n    <p>\\r\\n      Time units to the right (default)\\r\\n    </p>\\r\\n<pre>\\r\\napp-countdown-timer &#123;\\r\\n  --countdown-time-flex-direction: row-reverse;\\r\\n&#125;\\r\\n</pre>\\r\\n    <app-countdown-timer style=\\\"\\r\\n      --countdown-time-flex-direction: row-reverse;\\r\\n    \\\" [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'hour', to: 'hour'}\\\"></app-countdown-timer>\\r\\n    <p>\\r\\n      Time units to the left\\r\\n    </p>\\r\\n<pre>\\r\\napp-countdown-timer &#123;\\r\\n  --countdown-time-flex-direction: row;\\r\\n&#125;\\r\\n</pre>\\r\\n    <app-countdown-timer style=\\\"\\r\\n      --countdown-time-flex-direction: row;\\r\\n    \\\" [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'hour', to: 'hour'}\\\"></app-countdown-timer>\\r\\n    <p>\\r\\n      Time units above\\r\\n    </p>\\r\\n<pre>\\r\\napp-countdown-timer &#123;\\r\\n  --countdown-time-flex-direction: column;\\r\\n&#125;\\r\\n</pre>\\r\\n    <app-countdown-timer style=\\\"\\r\\n      --countdown-time-flex-direction: column;\\r\\n    \\\" [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'hour', to: 'hour'}\\\"></app-countdown-timer>\\r\\n    <p>\\r\\n      Time units below\\r\\n    </p>\\r\\n<pre>\\r\\napp-countdown-timer &#123;\\r\\n  --countdown-time-flex-direction: column-reverse;\\r\\n&#125;\\r\\n</pre>\\r\\n    <app-countdown-timer style=\\\"\\r\\n      --countdown-time-flex-direction: column-reverse;\\r\\n    \\\" [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'hour', to: 'hour'}\\\"></app-countdown-timer>\\r\\n    <p>\\r\\n      This component can be configured with different fill modes (by default, no fill will be applied).\\r\\n    </p>\\r\\n    <h5>Fill: Entire Countdown</h5>\\r\\n<pre>\\r\\n&lt;app-countdown-timer <b>fill=\\\"countdown\\\"</b> [end]=\\\"countdownDate\\\" [units]=\\\"&#123;from: 'hour', to: 'second'&#125;\\\"&gt;&lt;/app-countdown-timer&gt;\\r\\n</pre>\\r\\n    <app-countdown-timer style=\\\"\\r\\n    background-color: transparent;\\r\\n    --countdown-padding: 10px;\\r\\n    --countdown-fill-border: none;\\r\\n    --countdown-fill-border-radius: 10px;\\r\\n    --countdown-fill-background: #FFFFFF;\\r\\n    --countdown-fill-shadow: 0px 0px 5px 0px rgba(0,0,0, 0.2);\\r\\n    \\\" fill=\\\"countdown\\\" [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'hour', to: 'second'}\\\"></app-countdown-timer>\\r\\n    <h5>Fill: Time wrapper</h5>\\r\\n<pre>\\r\\n&lt;app-countdown-timer <b>fill=\\\"time\\\"</b> [end]=\\\"countdownDate\\\" [units]=\\\"&#123;from: 'hour', to: 'second'&#125;\\\"&gt;&lt;/app-countdown-timer&gt;\\r\\n</pre>\\r\\n    <app-countdown-timer style=\\\"\\r\\n    background-color: transparent;\\r\\n    --countdown-padding: 10px;\\r\\n    --countdown-time-margin: 0px 10px;\\r\\n    --countdown-time-padding: 10px 0px;\\r\\n    --countdown-fill-border: none;\\r\\n    --countdown-fill-border-radius: 10px;\\r\\n    --countdown-fill-background: #FFFFFF;\\r\\n    --countdown-fill-shadow: 0px 0px 5px 0px rgba(0,0,0, 0.2);\\r\\n    \\\" fill=\\\"time\\\" [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'hour', to: 'second'}\\\"></app-countdown-timer>\\r\\n    <h5>Fill: Inner Time Value</h5>\\r\\n<pre>\\r\\n&lt;app-countdown-timer <b>fill=\\\"inner-time\\\"</b> [end]=\\\"countdownDate\\\" [units]=\\\"&#123;from: 'hour', to: 'second'&#125;\\\"&gt;&lt;/app-countdown-timer&gt;\\r\\n</pre>\\r\\n    <app-countdown-timer style=\\\"\\r\\n    background-color: transparent;\\r\\n    --countdown-padding: 10px;\\r\\n    --countdown-inner-time-margin: 5px;\\r\\n    --countdown-inner-time-padding: 10px;\\r\\n    --countdown-fill-border: none;\\r\\n    --countdown-fill-border-radius: 10px;\\r\\n    --countdown-fill-background: #FFFFFF;\\r\\n    --countdown-fill-shadow: 0px 0px 5px 0px rgba(0,0,0, 0.2);\\r\\n    \\\" fill=\\\"inner-time\\\" [end]=\\\"countdownDate\\\" [units]=\\\"{from: 'hour', to: 'second'}\\\"></app-countdown-timer>\\r\\n  </section>\\r\\n</ion-content>\\r\\n\"","module.exports = \".showcase-content {\\n  --background: var(--app-background-shade); }\\n  .showcase-content ion-item-divider {\\n    --background: var(--ion-color-secondary);\\n    --color: var(--ion-color-lightest);\\n    text-transform: uppercase;\\n    font-weight: 500;\\n    letter-spacing: 1px; }\\n  .showcase-content .showcase-section {\\n    margin: 20px 20px 100px; }\\n  .showcase-content pre {\\n    font-size: 14px;\\n    background: #CCC;\\n    padding: 10px; }\\n  .showcase-content code {\\n    color: #F92672;\\n    font-weight: 500; }\\n  .showcase-content .custom-checkbox {\\n    background: #CCC;\\n    color: #000;\\n    padding: 20px;\\n    display: flex;\\n    align-items: center; }\\n  .showcase-content .custom-checkbox ion-label {\\n      -webkit-margin-start: 10px;\\n              margin-inline-start: 10px; }\\n  .showcase-content .custom-checkbox.checkbox-checked {\\n      background: #00AFFF;\\n      color: #FFF; }\\n  .showcase-content app-countdown-timer {\\n    padding: 20px;\\n    margin-bottom: 40px;\\n    background-color: #FFF; }\\n  .showcase-content app-show-hide-password {\\n    background-color: #FFF;\\n    padding: 0px 15px; }\\n  .showcase-content app-show-hide-password ion-input {\\n      --padding-start: 0px;\\n      --padding-end: 0px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hvd2Nhc2UvY3VzdG9tLWNvbXBvbmVudHMvQzpcXFByb2plY3RzXFxBcHBsaWNhdGlvbnNcXGlvbmljNC1mdWxsLXN0YXJ0ZXItYXBwLTEuMi9zcmNcXGFwcFxcc2hvd2Nhc2VcXGN1c3RvbS1jb21wb25lbnRzXFxjdXN0b20tY29tcG9uZW50cy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5Q0FBYSxFQUFBO0VBRGY7SUFJSSx3Q0FBYTtJQUNiLGtDQUFRO0lBQ1IseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQixtQkFBbUIsRUFBQTtFQVJ2QjtJQVlJLHVCQUF1QixFQUFBO0VBWjNCO0lBZ0JJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsYUFBYSxFQUFBO0VBbEJqQjtJQXNCSSxjQUFjO0lBQ2QsZ0JBQWdCLEVBQUE7RUF2QnBCO0lBMkJJLGdCQUFnQjtJQUNoQixXQUFXO0lBQ1gsYUFBYTtJQUNiLGFBQWE7SUFDYixtQkFBbUIsRUFBQTtFQS9CdkI7TUFrQ00sMEJBQXlCO2NBQXpCLHlCQUF5QixFQUFBO0VBbEMvQjtNQXNDTSxtQkFBbUI7TUFDbkIsV0FBVyxFQUFBO0VBdkNqQjtJQTRDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHNCQUFzQixFQUFBO0VBOUMxQjtJQWtESSxzQkFBc0I7SUFDdEIsaUJBQWlCLEVBQUE7RUFuRHJCO01Bc0RNLG9CQUFnQjtNQUNoQixrQkFBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2hvd2Nhc2UvY3VzdG9tLWNvbXBvbmVudHMvY3VzdG9tLWNvbXBvbmVudHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNob3djYXNlLWNvbnRlbnQge1xyXG4gIC0tYmFja2dyb3VuZDogdmFyKC0tYXBwLWJhY2tncm91bmQtc2hhZGUpO1xyXG5cclxuICBpb24taXRlbS1kaXZpZGVyIHtcclxuICAgIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLXNlY29uZGFyeSk7XHJcbiAgICAtLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItbGlnaHRlc3QpO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG4gIH1cclxuXHJcbiAgLnNob3djYXNlLXNlY3Rpb24ge1xyXG4gICAgbWFyZ2luOiAyMHB4IDIwcHggMTAwcHg7XHJcbiAgfVxyXG5cclxuICBwcmUge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgYmFja2dyb3VuZDogI0NDQztcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgfVxyXG5cclxuICBjb2RlIHtcclxuICAgIGNvbG9yOiAjRjkyNjcyO1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICB9XHJcblxyXG4gIC5jdXN0b20tY2hlY2tib3gge1xyXG4gICAgYmFja2dyb3VuZDogI0NDQztcclxuICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgIGlvbi1sYWJlbCB7XHJcbiAgICAgIG1hcmdpbi1pbmxpbmUtc3RhcnQ6IDEwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJi5jaGVja2JveC1jaGVja2VkIHtcclxuICAgICAgYmFja2dyb3VuZDogIzAwQUZGRjtcclxuICAgICAgY29sb3I6ICNGRkY7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhcHAtY291bnRkb3duLXRpbWVyIHtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcclxuICB9XHJcblxyXG4gIGFwcC1zaG93LWhpZGUtcGFzc3dvcmQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcclxuICAgIHBhZGRpbmc6IDBweCAxNXB4O1xyXG5cclxuICAgIGlvbi1pbnB1dCB7XHJcbiAgICAgIC0tcGFkZGluZy1zdGFydDogMHB4O1xyXG4gICAgICAtLXBhZGRpbmctZW5kOiAwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\n@Component({\r\n  selector: 'app-showcase-custom-components',\r\n  templateUrl: './custom-components.page.html',\r\n  styleUrls: ['./custom-components.page.scss']\r\n})\r\nexport class CustomComponentsPage {\r\n  // Relative date (better to showcase UI micro-interactions)\r\n  countdownDate: string = dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string;\r\n  // Instead of hardcoded one\r\n  // countdownDate = '12/01/2018';\r\n\r\n  constructor() { }\r\n}\r\n","import { Observable, BehaviorSubject, forkJoin, of } from 'rxjs';\r\nimport { first, delay } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport class ShellProvider<T> {\r\n  private _observable: Observable<T>;\r\n\r\n  // A Subject that requires an initial value and emits its current value to new subscribers\r\n  // If we choose a BehaviorSubject, new subscribers will only get the latest value (real data).\r\n  // This is useful for repeated use of the resolved data (navigate to a page, go back, navigate to the same page again)\r\n  private _subject: BehaviorSubject<T>;\r\n\r\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\r\n  // However, in production you should set this delay to 0 in the environment.ts file.\r\n  private networkDelay = (environment && environment.shell && environment.shell.networkDelay) ? environment.shell.networkDelay : 0;\r\n  // To debug shell styles, change configuration in the environment.ts file\r\n  private debugMode = (environment && environment.shell && environment.shell.debug) ? environment.shell.debug : false;\r\n\r\n  constructor(shellModel: T, dataObservable: Observable<T>) {\r\n    // tslint:disable-next-line:max-line-length\r\n    const shellClassName = (shellModel && shellModel.constructor && shellModel.constructor.name) ? shellModel.constructor.name : 'No Class Name';\r\n\r\n    // tslint:disable-next-line:no-console\r\n    console.time('[' + shellClassName + '] ShellProvider roundtrip');\r\n    // Set the shell model as the initial value\r\n    this._subject = new BehaviorSubject<T>(shellModel);\r\n\r\n    const delayObservable = of(true).pipe(\r\n      delay(this.networkDelay)\r\n      // finalize(() => console.log('delayObservable COMPLETED'))\r\n    );\r\n\r\n    dataObservable.pipe(\r\n      first() // Prevent the need to unsubscribe because .first() completes the observable\r\n      // finalize(() => console.log('dataObservable COMPLETED'))\r\n    );\r\n\r\n    // Put both delay and data Observables in a forkJoin so they execute in parallel so that\r\n    // the delay caused (on purpose) by the delayObservable doesn't get added to the time the dataObservable takes to complete\r\n    const forkedObservables = forkJoin(\r\n      delayObservable,\r\n      dataObservable\r\n    )\r\n    .pipe(\r\n      // finalize(() => console.log('forkedObservables COMPLETED'))\r\n    )\r\n    .subscribe(([delayValue, dataValue]: [boolean, T]) => {\r\n      if (!this.debugMode) {\r\n        this._subject.next(dataValue);\r\n        // tslint:disable-next-line:no-console\r\n        console.timeEnd('[' + shellClassName + '] ShellProvider roundtrip');\r\n      }\r\n    });\r\n\r\n    this._observable = this._subject.asObservable();\r\n  }\r\n\r\n  public get observable(): Observable<T> {\r\n    return this._observable;\r\n  }\r\n}\r\n"],"sourceRoot":""}